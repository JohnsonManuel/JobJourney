# -*- coding: utf-8 -*-
"""Scraping.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ndOCrUmViz5puT5Qo9wqdh0o2QJug8Da
"""

pip install requests beautifulsoup4 sentence-transformers

import requests
from bs4 import BeautifulSoup

# Function to scrape the full text content from a webpage
def scrape_full_page(url):
    try:
        # Make a request to the webpage
        response = requests.get(url)
        response.raise_for_status()  # Check for request errors

        # Parse the webpage content
        soup = BeautifulSoup(response.content, 'html.parser')

        # Extract all the text content from the page
        text = soup.get_text(separator=' ', strip=True)

        return text
    except Exception as e:
        print(f"Error scraping the webpage: {e}")
        return None

# Function to save text to a file
def save_text_to_file(text, filename="full_page_text.txt"):
    try:
        with open(filename, 'w', encoding='utf-8') as file:
            file.write(text)
        print(f"Text successfully saved to {filename}")
    except Exception as e:
        print(f"Error saving the file: {e}")

# Main function
if __name__ == "__main__":
    # Hard-coded webpage URL
    url = "https://www.bmwgroup.jobs/de/de/jobfinder/job-description-copy.133605.html?mode=job&iis=Indeed&iisn=Indeed.com"
    # Scrape the full page text
    full_page_text = scrape_full_page(url)

    llm = ChatGroq(
    model="llama-3.1-70b-versatile",  # Adjust this model name as per Groq's API documentation.
    temperature=0,
    max_retries=2,
    api_key="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"
    )

    summary_prompt = PromptTemplate(
    input_variables=["document"],
    template="You are provided with a raw job posting scraped from a job site. Your task is to intelligently extract the most relevant key details from the job posting. You should identify and return the information in a structured JSON format, Analyze the content of the job posting and determine these fields based on context. Return only the JSON object: {document}")
    summarization_chain = summary_prompt | llm
    response = summarization_chain.invoke({"document": full_page_text})

    print(response)

    if full_page_text:
         print(f"Full page text snippet: {full_page_text[:]}...")  # Show a snippet of the full page text

         # Save the scraped text to a file
         save_text_to_file(full_page_text)
    else:
         print("Failed to scrape the webpage.")

pip install Groq PromptTemplate

pip install langchain_groq

from langchain.prompts import PromptTemplate
from langchain_groq import ChatGroq

"""content='Hier sind die relevanten Informationen aus der Jobbeschreibung in einem strukturierten JSON-Format:\n\n```json\n{\n  "jobTitle": "Praktikant Generative Artificial Intelligence (w/m/x)",\n  "unternehmensbereich": "BMW AG",\n  "standort": "München",\n  "arbeitsbereich": "Data Science",\n  "jobId": "133605",\n  "veroeffentlichungsdatum": "24.07.2024",\n  "startdatum": "ab 07.10.2024",\n  "dauer": "6 Monate",\n  "arbeitszeit": "Vollzeit",\n  "kontakt": "BMW Group HR Team +49 89 382-17001",\n  "beschreibung": "Wir bieten dir ein spannendes und abwechslungsreiches Praktikum im Bereich \'Generative Artificial Intelligence\'.",\n  "anforderungen": [\n    "Studium der Informatik, Mathematik, Physik, Ingenieurwissenschaften, oder eines verwandten Fachbereichs mit deutlichem Bezug zu Data Science/ KI.",\n    "Theoretische und praktische Kenntnisse in maschinellem Lernen und generativer KI.",\n    "Erfahrungen im Umgang mit großen Datenmengen und entsprechenden Analysemethoden.",\n    "Sicherer Umgang mit der Programmiersprache Python und gängigen Data Science Bibliotheken.",\n    "Sehr gute analytische Fähigkeiten und eine strukturierte Arbeitsweise.",\n    "Ausgeprägte Team- und Kommunikationsfähigkeit.",\n    "Verhandlungssichere Deutsch- oder Englischkenntnisse."\n  ],\n  "angebote": [\n    "Umfassendes Mentoring & Onboarding.",\n    "Persönliche & fachliche Weiterentwicklung.",\n    "Flexible Arbeitszeiten.",\n    "Mobilarbeit.",\n    "Attraktive Vergütung.",\n    "Apartments für Studierende (nach Verfügbarkeit & nur am Standort München)."\n  ]\n}\n```\n\nDieses JSON-Objekt enthält die wichtigsten Informationen aus der Jobbeschreibung, einschließlich des Job-Titels, des Unternehmensbereichs, des Standorts, des Arbeitsbereichs, der Job-ID, des Veröffentlichungsdatums, des Startdatums, der Dauer, der Arbeitszeit, des Kontakts, der Beschreibung, der Anforderungen und der Angebote.' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 548, 'prompt_tokens': 1591, 'total_tokens': 2139, 'completion_time': 2.194126876, 'prompt_time': 0.37661383, 'queue_time': 0.005952120000000005, 'total_time': 2.570740706}, 'model_name': 'llama-3.1-70b-versatile', 'system_fingerprint': 'fp_b6828be2c9', 'finish_reason': 'stop', 'logprobs': None} id='run-ee725a5b-9811-475b-93e0-5d060a25060a-0' usage_metadata={'input_tokens': 1591, 'output_tokens': 548, 'total_tokens': 2139}


"""



"""content='```json\n{\n  "jobTitle": "Praktikant Generative Artificial Intelligence (w/m/x)",\n  "company": "BMW Group",\n  "location": "München, Deutschland",\n  "jobType": "Praktikum",\n  "duration": "6 Monate",\n  "workingHours": "Vollzeit",\n  "startDate": "07.10.2024",\n  "jobDescription": "Wir bieten dir ein spannendes und abwechslungsreiches Praktikum im Bereich \'Generative Artificial Intelligence\'.",\n  "responsibilities": [\n    "Innovative Projekte mitgestalten",\n    "Neue Lösungen entwickeln",\n    "Forschung in Praxis umsetzen",\n    "Deine Ergebnisse präsentieren",\n    "Karriereperspektiven erkunden"\n  ],\n  "requirements": [\n    "Studium der Informatik, Mathematik, Physik, Ingenieurwissenschaften, oder eines verwandten Fachbereichs mit deutlichem Bezug zu Data Science/ KI",\n    "Theoretische und praktische Kenntnisse in maschinellem Lernen und generativer KI",\n    "Erfahrungen im Umgang mit großen Datenmengen und entsprechenden Analysemethoden",\n    "Sicherer Umgang mit der Programmiersprache Python und gängigen Data Science Bibliotheken",\n    "Sehr gute analytische Fähigkeiten und eine strukturierte Arbeitsweise",\n    "Ausgeprägte Team- und Kommunikationsfähigkeit",\n    "Verhandlungssichere Deutsch- oder Englischkenntnisse"\n  ],\n  "benefits": [\n    "Umfassendes Mentoring & Onboarding",\n    "Persönliche & fachliche Weiterentwicklung",\n    "Flexible Arbeitszeiten",\n    "Mobilarbeit",\n    "Attraktive Vergütung",\n    "Apartments für Studierende (nach Verfügbarkeit & nur am Standort München)"\n  ],\n  "contact": {\n    "phone": "+49 89 382-17001",\n    "email": "BMW Group HR Team"\n  },\n  "jobId": "133605",\n  "publicationDate": "24.07.2024"\n}\n```' additional_kwargs={} response_metadata={'token_usage': {'completion_tokens': 492, 'prompt_tokens': 1613, 'total_tokens': 2105, 'completion_time': 1.968, 'prompt_time': 0.381564807, 'queue_time': 0.005745080999999985, 'total_time': 2.349564807}, 'model_name': 'llama-3.1-70b-versatile', 'system_fingerprint': 'fp_5c5d1b5cfb', 'finish_reason': 'stop', 'logprobs': None} id='run-9b6bbe91-7586-41eb-9b69-d80edbc2c4b8-0' usage_metadata={'input_tokens': 1613, 'output_tokens': 492, 'total_tokens': 2105}


"""